charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = space
insert_final_newline = true
is_global = true

# Preferred modifier order.
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Prefer expression bodies for lambdas.
csharp_style_expression_bodied_lambdas = true:warning

# Namespace declarations should be file scoped.
csharp_style_namespace_declarations = file_scoped

# Prefer pattern matching instead of is expressions with type casts.
csharp_style_pattern_matching_over_is_with_cast_check = true

# Prefer pattern matching to determine if something is of a particular type.
csharp_style_pattern_matching_over_as_with_null_check = true

# Prefer switch expressions over switch statements.
csharp_style_prefer_switch_expression = true:suggestion

# Flag only non-public methods that contain unused parameters.
dotnet_code_quality_unused_parameters = non_public

# Don't sort system directives ahead of other directives.
dotnet_sort_system_directives_first = false

# Prefer tuple names over ItemX properties.
dotnet_style_explicit_tuple_names = true

# Use built-in type aliases, e.g. int instead of Int32.
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

# Use built-in type aliases for member access, e.g. int.MaxValue not Int32.MaxValue.
dotnet_style_predefined_type_for_member_access = true:suggestion

# Prefer compound assignment expressions.
dotnet_style_prefer_compound_assignment = true:warning

# Don't requrie 'this.' when accessing member event, field, method, or property.
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# CA1000: Do not declare static members on generic types.
# Motivation: A static member on a generic type can be practical.
dotnet_diagnostic.CA1000.severity = silent

# CA1001: Types that own disposable fields should be disposable.
dotnet_diagnostic.CA1001.severity = suggestion

# CA1002: Do not expose generic lists.
# Motivation: Working with List<T> is often practical.
dotnet_diagnostic.CA1002.severity = silent

# CA1018: Mark attributes with AttributeUsageAttribute.
dotnet_diagnostic.CA1018.severity = warning

# CA1036: Override methods on comparable types.
dotnet_diagnostic.CA1036.severity = warning

# CA1047: Do not declare protected member in sealed type.
# Remarks: In C# this is covered by CS0628.
dotnet_diagnostic.CA1047.severity = warning

# CA1050: Declare types in namespaces.
dotnet_diagnostic.CA1050.severity = warning

# CA1051: Do not declare visible instance fields.
# Motivation: SA1401 is enabled instead.
dotnet_diagnostic.CA1051.severity = silent

# CA1511: Use ArgumentException throw helper.
dotnet_diagnostic.CA1511.severity = warning

# CA1512: Use ArgumentOutOfRangeException throw helper.
dotnet_diagnostic.CA1512.severity = warning

# CA1513: Use ObjectDisposedException throw helper.
dotnet_diagnostic.CA1513.severity = warning

# CS1591: Missing documentation for public type.
# Motivation: Prefer SA1600 instead.
dotnet_diagnostic.CS1591.severity = none

# IDE0001: Simplify name.
dotnet_diagnostic.IDE0001.severity = warning

# IDE0002: Simplify member access.
dotnet_diagnostic.IDE0002.severity = warning

# IDE0003: Remove this qualification where unnecessary.
dotnet_diagnostic.IDE0003.severity = warning

# IDE0004: Remove unnecessary casts.
dotnet_diagnostic.IDE0004.severity = warning

# IDE0005: Remove unnecessary usings.
dotnet_diagnostic.IDE0005.severity = warning

# IDE0009: Simplify member access.
# Motivation: 'this.' is only required where necessary.
dotnet_diagnostic.IDE0009.severity = none

# IDE0011: Surround blocks of code with curly braces.
dotnet_diagnostic.IDE0011.severity = warning

# IDE0018: Prefer inline 'out' variable declaration.
dotnet_diagnostic.IDE0018.severity = warning

# IDE0019: Use pattern matching to avoid null check.
dotnet_diagnostic.IDE0019.severity = warning

# IDE0020: Use pattern matching to avoid is check followed by cast (with # variable).
dotnet_diagnostic.IDE0020.severity = warning

# IDE0021: Prefer block bodies for constructors.
dotnet_diagnostic.IDE0021.severity = warning

# IDE0031: Use null propagation.
dotnet_diagnostic.IDE0031.severity = warning

# IDE0032: Use auto-implemented property.
dotnet_diagnostic.IDE0032.severity = warning

# IDE0033: Use explicitly provided tuple names.
dotnet_diagnostic.IDE0033.severity = warning

# IDE0034: Simplify default expression.
dotnet_diagnostic.IDE0034.severity = warning

# IDE0035: Remove unreachable code.
dotnet_diagnostic.IDE0035.severity = warning

# IDE0036: Enforce modifier order.
dotnet_diagnostic.IDE0036.severity = warning

# IDE0037: Use inferred member names.
# Motivation: Allow explicit member names since they are less likely to be
# broken accidentally by renaming a variable.
dotnet_diagnostic.IDE0037.severity = silent

# IDE0038: Use pattern matching to avoid is check followed by cast (without variable).
dotnet_diagnostic.IDE0038.severity = warning

# IDE0039: Use local function instead of lambda.
dotnet_diagnostic.IDE0039.severity = suggestion

# IDE0040: Add accessibility modifiers.
dotnet_diagnostic.IDE0040.severity = warning

# IDE0041: Use is null check.
dotnet_diagnostic.IDE0041.severity = warning

# IDE0042: Deconstruct variable declaration.
dotnet_diagnostic.IDE0042.severity = suggestion

# IDE0043: Format string contains invalid placeholder.
dotnet_diagnostic.IDE0043.severity = warning

# IDE0044: Make field readonly.
dotnet_diagnostic.IDE0044.severity = warning

# IDE0045: Use conditional expression for assignment.
dotnet_diagnostic.IDE0045.severity = suggestion

# IDE0046: Use conditional expression for return.
dotnet_diagnostic.IDE0046.severity = suggestion

# IDE0047: Remove unnecessary parentheses.
# Motivation: Unnecessary parentheses can clarify intent.
dotnet_diagnostic.IDE0047.severity = silent

# IDE0048: Add parentheses for clarity.
dotnet_diagnostic.IDE0048.severity = suggestion

# IDE0049: Use built-in type aliases.
dotnet_diagnostic.IDE0049.severity = warning

# IDE0051: Remove unused private members.
dotnet_diagnostic.IDE0051.severity = warning

# IDE0052: Remove unread private member.
dotnet_diagnostic.IDE0052.severity = warning

# IDE0053: Use expression body for lambdas.
dotnet_diagnostic.IDE0053.severity = warning

# IDE0054: Use compound assignment.
dotnet_diagnostic.IDE0054.severity = warning

# IDE0055: Apply all formatting rules.
dotnet_diagnostic.IDE0055.severity = warning

# IDE0056: Use index operator.
dotnet_diagnostic.IDE0056.severity = suggestion

# IDE0057: Use range operator.
dotnet_diagnostic.IDE0057.severity = suggestion

# IDE0058: Expression value is never used.
# Motivation: Don't require acknowledging a discarded return value.
dotnet_diagnostic.IDE0058.severity = silent

# IDE0059: Unnecessary assignment to a value.
dotnet_diagnostic.IDE0059.severity = warning

# IDE0060: Remove unused parameter.
dotnet_diagnostic.IDE0060.severity = warning

# IDE0061: Use expression body for local functions.
# Motivation: Though preferred, don't require expression bodies for local functions.
dotnet_diagnostic.IDE0061.severity = silent

# IDE0062: Make local function static.
dotnet_diagnostic.IDE0062.severity = warning

# IDE0063: Use simple 'using' statement.
# Motivation: The braced using statement provides a strong visual indicator of
# when the value is being released and should encourage releasing the value as
# soon as possible.
dotnet_diagnostic.IDE0063.severity = silent

# IDE0064: Make struct fields writable.
# Motivation: This rule is enabled to bring attention to weirdness, not to
# prescribe the fix for that weirdness. Not reassigning the struct should be
# preferred over making struct fields writable.
dotnet_diagnostic.IDE0064.severity = warning

# IDE0065: 'using' directive placement.
# Motivaiton: Preferred over SA1200 because IDE0065 has an associated quick fix action.
dotnet_diagnostic.IDE0065.severity = warning

# IDE0066: Use switch expression.
dotnet_diagnostic.IDE0066.severity = suggestion

# IDE0070: Use 'System.HashCode.Combine'.
dotnet_diagnostic.IDE0070.severity = suggestion

# IDE0071: Simplify interpolation.
dotnet_diagnostic.IDE0071.severity = warning

# IDE0072: Add missing cases to switch expression.
dotnet_diagnostic.IDE0072.severity = suggestion

# IDE0074: Use coalesce compound assignment.
dotnet_diagnostic.IDE0074.severity = warning

# IDE0075: Simplify conditional expression.
dotnet_diagnostic.IDE0075.severity = warning

# IDE0076: Remove or fix global 'SuppressMessageAttribute'.
dotnet_diagnostic.IDE0076.severity = warning

# IDE0077: Avoid legacy format target in global 'SuppressMessageAttribute'.
dotnet_diagnostic.IDE0077.severity = warning

# IDE0078: Use pattern matching.
dotnet_diagnostic.IDE0078.severity = suggestion

# IDE0079: Remove unnecessary suppression.
dotnet_diagnostic.IDE0079.severity = warning

# IDE0080: Remove unnecessary suppression operator.
dotnet_diagnostic.IDE0080.severity = warning

# IDE0082: Convert 'typeof' to 'nameof'.
dotnet_diagnostic.IDE0082.severity = warning

# IDE0083: Use pattern matching (not operator).
dotnet_diagnostic.IDE0083.severity = warning

# IDE0090: Simplify new expression.
dotnet_diagnostic.IDE0090.severity = warning

# IDE0100: Remove unnecessary equality operator.
dotnet_diagnostic.IDE0100.severity = warning

# IDE0110: Remove unnecessary discard.
dotnet_diagnostic.IDE0110.severity = warning

# IDE0120: Simplify LINQ expression.
dotnet_diagnostic.IDE0120.severity = suggestion

# IDE0130: Namespace does not match folder structure.
dotnet_diagnostic.IDE0130.severity = warning

# IDE0150: Prefer 'null' check over type check.
dotnet_diagnostic.IDE0150.severity = warning

# IDE0160: Use block-scoped namespace.
# Motivation: Prefer file-scoped namespaces (IDE0161).
dotnet_diagnostic.IDE0160.severity = none

# IDE0161: Use file-scoped namespace.
dotnet_diagnostic.IDE0161.severity = warning

# IDE0170: Simplify property pattern.
dotnet_diagnostic.IDE0170.severity = warning

# IDE0180: Use tuple to swap values.
dotnet_diagnostic.IDE0180.severity = suggestion

# IDE0200: Remove unnecessary lambda expression.
dotnet_diagnostic.IDE0200.severity = warning

# IDE0210: Use top-level statements.
# Motivation: A Program class should be preferred because it is easier to
# document and more likely to use good hygiene.
dotnet_diagnostic.IDE0210.severity = silent

# IDE0211: Use program main.
# Motivation: Though recommended, don't require a Program class.
dotnet_diagnostic.IDE0211.severity = silent

# IDE0220: Add explicit cast in foreach loop.
dotnet_diagnostic.IDE0220.severity = warning

# IDE0230: Use UTF8 string literal.
dotnet_diagnostic.IDE0230.severity = suggestion

# IDE0240: Nullable directive is redundant.
dotnet_diagnostic.IDE0240.severity = warning

# IDE0241: Nullable directive is unnecessary.
dotnet_diagnostic.IDE0241.severity = warning

# IDE0250: Struct can be made 'readonly'.
dotnet_diagnostic.IDE0250.severity = suggestion

# IDE0251: Member can be made 'readonly'.
dotnet_diagnostic.IDE0251.severity = suggestion

# IDE0260: Prefer pattern matching over as expression with null-conditional
# member access.
dotnet_diagnostic.IDE0260.severity = suggestion

# IDE0270: Prefer null coalescing expressions.
dotnet_diagnostic.IDE0270.severity = warning

# IDE0280: Use 'nameof'.
dotnet_diagnostic.IDE0280.severity = warning

# IDE0290: Use primary constructor.
# Motivation: Primary constructors can muddle class documentation.
dotnet_diagnostic.IDE0290.severity = silent

# IDE0300: Use collection expression for array.
dotnet_diagnostic.IDE0300.severity = warning

# IDE0301: Use collection expression for empty.
dotnet_diagnostic.IDE0301.severity = warning

# IDE0302: Use collection expression for stackalloc.
dotnet_diagnostic.IDE0302.severity = warning

# IDE0303: Use collection expression for Create().
dotnet_diagnostic.IDE0303.severity = warning

# IDE0304: Use collection expression for builder.
dotnet_diagnostic.IDE0304.severity = warning

# IDE0305: Use collection expression for fluent.
dotnet_diagnostic.IDE0305.severity = warning

# IDE0320: Make anonymous function static.
dotnet_diagnostic.IDE0320.severity = suggestion

# IDE0330: Prefer 'System.Threading.Lock'.
dotnet_diagnostic.IDE0330.severity = warning

# IDE1005: Use conditional delegate call.
dotnet_diagnostic.IDE1005.severity = warning

# SA0001: XML comment analysis should be enabled.
dotnet_diagnostic.SA0001.severity = warning

# SA0002: Invalid settings file detected.
dotnet_diagnostic.SA0002.severity = warning

# SA1000: Keywords should be spaced correctly.
dotnet_diagnostic.SA1000.severity = warning

# SA1001: Commas should be spaced correctly.
dotnet_diagnostic.SA1001.severity = warning

# SA1002: Semicolons should be spaced correctly.
dotnet_diagnostic.SA1002.severity = warning

# SA1003: Symbols should be spaced correctly.
dotnet_diagnostic.SA1003.severity = warning

# SA1004: Documentation lines should begin with single space.
dotnet_diagnostic.SA1004.severity = warning

# SA1005: Single line comments should begin with single space.
dotnet_diagnostic.SA1005.severity = warning

# SA1006: Preprocessor keywords should not be preceded by space.
dotnet_diagnostic.SA1006.severity = warning

# SA1007: Operator keyword should be followed by space.
dotnet_diagnostic.SA1007.severity = warning

# SA1008: Opening parenthesis should be spaced correctly.
dotnet_diagnostic.SA1008.severity = warning

# SA1009: Closing parenthesis should be spaced correctly.
dotnet_diagnostic.SA1009.severity = warning

# SA1010: Opening square brackets should be spaced correctly.
dotnet_diagnostic.SA1010.severity = warning

# SA1011: Closing square brackets should be spaced correctly.
dotnet_diagnostic.SA1011.severity = warning

# SA1012: Opening braces should be spaced correctly.
dotnet_diagnostic.SA1012.severity = warning

# SA1013: Closing braces should be spaced correctly.
dotnet_diagnostic.SA1013.severity = warning

# SA1014: Opening generic brackets should be spaced correctly.
dotnet_diagnostic.SA1014.severity = warning

# SA1015: Closing generic brackets should be spaced correctly.
dotnet_diagnostic.SA1015.severity = warning

# SA1016: Opening attribute brackets should be spaced correctly.
dotnet_diagnostic.SA1016.severity = warning

# SA1017: Closing attribute brackets should be spaced correctly.
dotnet_diagnostic.SA1017.severity = warning

# SA1018: Nullable type symbols should be spaced correctly.
dotnet_diagnostic.SA1018.severity = warning

# SA1019: Member access symbols should be spaced correctly.
dotnet_diagnostic.SA1019.severity = warning

# SA1020: Increment decrement symbols should be spaced correctly.
dotnet_diagnostic.SA1020.severity = warning

# SA1021: Negative signs should be spaced correctly.
dotnet_diagnostic.SA1021.severity = warning

# SA1022: Positive signs should be spaced correctly.
dotnet_diagnostic.SA1022.severity = warning

# SA1023: Dereference and access of symbols should be spaced correctly.
dotnet_diagnostic.SA1023.severity = warning

# SA1024: Colons should be spaced correctly.
dotnet_diagnostic.SA1024.severity = warning

# SA1025: Code should not contain multiple whitespace in a row.
dotnet_diagnostic.SA1025.severity = warning

# SA1026: Code should not contain space after new or stackalloc keyword in
# implicitly typed array allocation.
dotnet_diagnostic.SA1026.severity = warning

# SA1027 Use tabs correctly.
dotnet_diagnostic.SA1027.severity = warning

# SA1028: Code should not contain trailing whitespace.
dotnet_diagnostic.SA1028.severity = warning

# SA1100: Do not prefix calls with base unless local implementation exists.
dotnet_diagnostic.SA1100.severity = warning

# SA1101: Prefix local calls with this.
# Motivation: 'this.' is only required where necessary.
dotnet_diagnostic.SA1101.severity = none

# SA1102: Query clause should follow previous clause.
dotnet_diagnostic.SA1102.severity = warning

# SA1103: Query clauses should be on separate lines or all on one line.
dotnet_diagnostic.SA1103.severity = warning

# SA1104: Query clause should begin on new line when previous clause spans
# multiple lines.
dotnet_diagnostic.SA1104.severity = warning

# SA1105: Query clauses spanning multiple lines should begin on own line.
dotnet_diagnostic.SA1105.severity = warning

# SA1106: Code should not contain empty statements.
dotnet_diagnostic.SA1106.severity = warning

# SA1107: Code should not contain multiple statements on one line.
dotnet_diagnostic.SA1107.severity = warning

# SA1108: Block statements should not contain embedded comments.
dotnet_diagnostic.SA1108.severity = warning

# SA1109: Block statements should not contain embedded regions.
# Motivation: All violations of rule SA1109 are also violations of rule SA1123.
dotnet_diagnostic.SA1109.severity = none

# SA1110: Opening parenthesis or bracket should be on declaration line.
dotnet_diagnostic.SA1110.severity = warning

# SA1111: Closing parenthesis should be on line of last parameter.
dotnet_diagnostic.SA1111.severity = warning

# SA1112: Closing parenthesis should be on line of opening parenthesis.
dotnet_diagnostic.SA1112.severity = warning

# SA1113: Comma should be on the same line as previous parameter.
dotnet_diagnostic.SA1113.severity = warning

# SA1114: Parameter list should follow declaration.
dotnet_diagnostic.SA1114.severity = warning

# SA1115: Parameter should follow comma.
dotnet_diagnostic.SA1115.severity = warning

# SA1116: Split parameters should start on line after declaration.
dotnet_diagnostic.SA1116.severity = warning

# SA1117: Parameters should be on same line or separate lines.
dotnet_diagnostic.SA1117.severity = warning

# SA1118: Parameter should not span multiple lines.
dotnet_diagnostic.SA1118.severity = warning

# SA1120: Comments should contain text.
dotnet_diagnostic.SA1120.severity = warning

# SA1121: Use built-in type alias.
dotnet_diagnostic.SA1121.severity = warning

# SA1122: Use string.Empty for empty strings.
dotnet_diagnostic.SA1122.severity = warning

# SA1123: Do not place regions within elements.
dotnet_diagnostic.SA1123.severity = warning

# SA1124: Do not use regions.
dotnet_diagnostic.SA1124.severity = warning

# SA1125: Use shorthand for nullable types.
dotnet_diagnostic.SA1125.severity = warning

# SA1126: Prefix calls correctly.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1126.severity = none

# SA1127: Generic type constraints should be on their own line.
dotnet_diagnostic.SA1127.severity = warning

# SA1128: Put constructor initializers on their own line.
dotnet_diagnostic.SA1128.severity = warning

# SA1129: Do not use default value type constructor.
dotnet_diagnostic.SA1129.severity = warning

# SA1130: Use lambda syntax.
dotnet_diagnostic.SA1130.severity = warning

# SA1131: Use readable conditions.
dotnet_diagnostic.SA1131.severity = warning

# SA1132: Do not combine fields.
dotnet_diagnostic.SA1132.severity = warning

# SA1133: Do not combine attributes.
dotnet_diagnostic.SA1133.severity = warning

# SA1134: Attributes should not share line.
dotnet_diagnostic.SA1134.severity = warning

# SA1135: Using directives should be qualified.
dotnet_diagnostic.SA1135.severity = warning

# SA1136: Enum values should be on separate lines.
dotnet_diagnostic.SA1136.severity = warning

# SA1137: Elements should have the same indentation.
dotnet_diagnostic.SA1137.severity = warning

# SA1139: Use literal suffix notation instead of casting.
dotnet_diagnostic.SA1139.severity = warning

# SA1141: Use tuple syntax instead of ValueTuple.
dotnet_diagnostic.SA1141.severity = warning

# SA1142: Refer to tuple elements by name.
dotnet_diagnostic.SA1142.severity = warning

# SX1101: Do not prefix local calls with 'this.'.
dotnet_diagnostic.SX1101.severity = warning

# SA1200: Using directives should be placed correctly.
# Motivation: Prefer IDE0065 because it has an associated quick fix action.
dotnet_diagnostic.SA1200.severity = none

# SA1201: Elements should appear in the correct order.
dotnet_diagnostic.SA1201.severity = warning

# SA1202: Elements should be ordered by access.
dotnet_diagnostic.SA1202.severity = warning

# SA1203: Constants should appear before fields.
dotnet_diagnostic.SA1203.severity = warning

# SA1204: Static elements should appear before instance elements.
dotnet_diagnostic.SA1204.severity = warning

# SA1205: Partial elements should declare access.
dotnet_diagnostic.SA1205.severity = warning

# SA1206: Declaration keywords should follow order.
dotnet_diagnostic.SA1206.severity = warning

# SA1207: Protected should come before internal.
dotnet_diagnostic.SA1207.severity = warning

# SA1208: System using directives should be placed before other using directives.
# Remarks: Disabled by systemUsingDirectivesFirst config in stylecop.json.
dotnet_diagnostic.SA1208.severity = none

# SA1209: Using alias directives should be placed after other using directives.
dotnet_diagnostic.SA1209.severity = warning

# SA1210: Using directives should be ordered alphabetically by namespace.
dotnet_diagnostic.SA1210.severity = warning

# SA1211: Using alias directives should be ordered alphabetically by alias name.
dotnet_diagnostic.SA1211.severity = warning

# SA1212: Property accessors should follow order.
dotnet_diagnostic.SA1212.severity = warning

# SA1213: Event accessors should follow order.
dotnet_diagnostic.SA1213.severity = warning

# SA1214: Readonly fields should appear before non-readonly fields.
dotnet_diagnostic.SA1214.severity = warning

# SA1216: Using static directives should be placed at the correct location.
dotnet_diagnostic.SA1216.severity = warning

# SA1217: Using static directives should be ordered alphabetically.
dotnet_diagnostic.SA1217.severity = warning

# SA1300: Element should begin with upper-case letter.
dotnet_diagnostic.SA1300.severity = warning

# SA1301: Element should begin with lower-case letter.
# Motivation: This rule is defunct and there are no situations in which this
# rule will fire.
dotnet_diagnostic.SA1301.severity = none

# SA1302: Interface names should begin with I.
dotnet_diagnostic.SA1302.severity = warning

# SA1303: Const field names should begin with upper-case letter.
dotnet_diagnostic.SA1303.severity = warning

# SA1304: Non-private readonly fields should begin with upper-case letter.
dotnet_diagnostic.SA1304.severity = warning

# SA1305: Field names should not use Hungarian notation.
# Motivation: This rule is disabled by default and is too easily confused.
dotnet_diagnostic.SA1305.severity = none

# SA1306: Field names should begin with lower-case letter.
dotnet_diagnostic.SA1306.severity = warning

# SA1307: Accessible fields should begin with upper-case letter.
dotnet_diagnostic.SA1307.severity = warning

# SA1308: Variable names should not be prefixed.
dotnet_diagnostic.SA1308.severity = warning

# SA1309: Field names should not begin with underscore.
# Motivation: Allow field names to start with an underscore.
dotnet_diagnostic.SA1309.severity = none

# SA1310: Field names should not contain underscore.
dotnet_diagnostic.SA1310.severity = warning

# SA1311: Static readonly fields should begin with upper-case letter.
dotnet_diagnostic.SA1311.severity = warning

# SA1312: Variable names should begin with lower-case letter.
dotnet_diagnostic.SA1312.severity = warning

# SA1313: Parameter names should begin with lower-case letter.
dotnet_diagnostic.SA1313.severity = warning

# SA1314: Type parameter names should begin with T.
dotnet_diagnostic.SA1314.severity = warning

# SX1309: Field names should begin with underscore.
# Motivation: Don't require field names to start with an underscore.
dotnet_diagnostic.SX1309.severity = none

# SX1309S: Static field names should begin with underscore.
# Motivation: Don't require static field names to start with an underscore.
dotnet_diagnostic.SX1309S.severity = none

# SA1119: Statement should not use unnecessary parenthesis.
dotnet_diagnostic.SA1119.severity = warning

# SA1400: Access modifier should be declared.
dotnet_diagnostic.SA1400.severity = warning

# SA1401: Fields should be private.
dotnet_diagnostic.SA1401.severity = warning

# SA1402: File may only contain a single type.
dotnet_diagnostic.SA1402.severity = warning

# SA1403: File may only contain a single namespace.
dotnet_diagnostic.SA1403.severity = warning

# SA1404: Code analysis suppression should have justification.
dotnet_diagnostic.SA1404.severity = warning

# SA1405: Debug.Assert should provide message text.
dotnet_diagnostic.SA1405.severity = warning

# SA1406: Debug.Fail should provide message text.
dotnet_diagnostic.SA1406.severity = warning

# SA1407: Arithmetic expressions should declare precedence.
dotnet_diagnostic.SA1407.severity = warning

# SA1408: Conditional expressions should declare precedence.
dotnet_diagnostic.SA1408.severity = warning

# SA1409: Remove unnecessary code.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1409.severity = none

# SA1410: Remove delegate parenthesis when possible.
dotnet_diagnostic.SA1410.severity = warning

# SA1411: Attribute constructor should not use unnecessary parenthesis.
dotnet_diagnostic.SA1411.severity = warning

# SA1412: Store files as UTF-8 with byte order mark.
dotnet_diagnostic.SA1412.severity = none

# SA1413: Use trailing comma in multi-line initializers.
dotnet_diagnostic.SA1413.severity = warning

# SA1414: Tuple types in signatures should have element names.
dotnet_diagnostic.SA1414.severity = warning

# SA1500: Braces for multi-line statements should not share line.
dotnet_diagnostic.SA1500.severity = warning

# SA1501: Statement should not be on a single line.
dotnet_diagnostic.SA1501.severity = warning

# SA1502: Element should not be on a single line.
dotnet_diagnostic.SA1502.severity = warning

# SA1503: Braces should not be omitted.
dotnet_diagnostic.SA1503.severity = warning

# SA1504: All accessors should be single-line or multi-line.
dotnet_diagnostic.SA1504.severity = warning

# SA1505: Opening braces should not be followed by blank line.
dotnet_diagnostic.SA1505.severity = warning

# SA1506: Element documentation headers should not be followed by blank line.
dotnet_diagnostic.SA1506.severity = warning

# SA1507: Code should not contain multiple blank lines in a row.
dotnet_diagnostic.SA1507.severity = warning

# SA1508: Closing braces should not be preceded by blank line.
dotnet_diagnostic.SA1508.severity = warning

# SA1509: Opening braces should not be preceded by blank line.
dotnet_diagnostic.SA1509.severity = warning

# SA1510: Chained statement blocks should not be preceded by blank line.
dotnet_diagnostic.SA1510.severity = warning

# SA1511: While-do footer should not be preceded by blank line.
dotnet_diagnostic.SA1511.severity = warning

# SA1512: Single-line comments should not be followed by blank line.
dotnet_diagnostic.SA1512.severity = warning

# SA1513: Closing brace should be followed by blank line.
# Motivation: This rule is too pragmatic in practice.
dotnet_diagnostic.SA1513.severity = none

# SA1514: Element documentation header should be preceded by blank line.
dotnet_diagnostic.SA1514.severity = warning

# SA1515: Single-line comment should be preceded by blank line.
dotnet_diagnostic.SA1515.severity = warning

# SA1516: Elements should be separated by blank line.
dotnet_diagnostic.SA1516.severity = warning

# SA1517: Code should not contain blank lines at start of file.
dotnet_diagnostic.SA1517.severity = warning

# SA1518: Use line endings correctly at end of file.
dotnet_diagnostic.SA1518.severity = warning

# SA1519: Braces should not be omitted from multi-line child statement.
dotnet_diagnostic.SA1519.severity = warning

# SA1520: Use braces consistently.
dotnet_diagnostic.SA1520.severity = warning

# SA1600: Elements should be documented.
dotnet_diagnostic.SA1600.severity = warning

# SA1601: Partial elements should be documented.
dotnet_diagnostic.SA1601.severity = warning

# SA1602: Enumeration items should be documented.
dotnet_diagnostic.SA1602.severity = warning

# SA1603: Documentation should contain valid XML.
# Motivation: This is a duplicate of CS1570.
dotnet_diagnostic.SA1603.severity = none

# SA1604: Element documentation should have summary.
dotnet_diagnostic.SA1604.severity = warning

# SA1605: Partial element documentation should have summary.
dotnet_diagnostic.SA1605.severity = warning

# SA1606: Element documentation should have summary text.
dotnet_diagnostic.SA1606.severity = warning

# SA1607: Partial element documentation should have summary text.
dotnet_diagnostic.SA1607.severity = warning

# SA1608: Element documentation should not have default summary.
dotnet_diagnostic.SA1608.severity = warning

# SA1609: Property documentation should have value.
# Motivation: Value tends to repeat the content of summary.
dotnet_diagnostic.SA1609.severity = none

# SA1610: Property documentation should have value text.
dotnet_diagnostic.SA1610.severity = warning

# SA1611: Element parameters should be documented.
dotnet_diagnostic.SA1611.severity = warning

# SA1612: Element parameter documentation should match element parameters.
dotnet_diagnostic.SA1612.severity = warning

# SA1613: Element parameter documentation should declare parameter name.
dotnet_diagnostic.SA1613.severity = warning

# SA1614: Element parameter documentation should have text.
dotnet_diagnostic.SA1614.severity = warning

# SA1615: Element return value should be documented.
dotnet_diagnostic.SA1615.severity = warning

# SA1616: Element return value documentation should have text.
dotnet_diagnostic.SA1616.severity = warning

# SA1617: Void return value should not be documented.
dotnet_diagnostic.SA1617.severity = warning

# SA1618: Generic type parameters should be documented.
dotnet_diagnostic.SA1618.severity = warning

# SA1619: Generic type parameters should be documented partial class.
dotnet_diagnostic.SA1619.severity = warning

# SA1620: Generic type parameter documentation should match type parameters.
dotnet_diagnostic.SA1620.severity = warning

# SA1621: Generic type parameter documentation should declare parameter name.
dotnet_diagnostic.SA1621.severity = warning

# SA1622: Generic type parameter documentation should have text.
dotnet_diagnostic.SA1622.severity = warning

# SA1623: Property summary documentation should match accessors.
dotnet_diagnostic.SA1623.severity = warning

# SA1624: Property summary documentation should omit accessor with restricted access.
dotnet_diagnostic.SA1624.severity = warning

# SA1625: Element documentation should not be copied and pasted.
dotnet_diagnostic.SA1625.severity = warning

# SA1626: Single-line comments should not use documentation style slashes.
dotnet_diagnostic.SA1626.severity = warning

# SA1627: Documentation text should not be empty.
dotnet_diagnostic.SA1627.severity = warning

# SA1628: Documentation text should begin with a capital letter.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1628.severity = none

# SA1629: Documentation text should end with a period.
dotnet_diagnostic.SA1629.severity = warning

# SA1630: Documentation text should contain whitespace.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1630.severity = none

# SA1631: Documentation should meet character percentage.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1631.severity = none

# SA1632: Documentation text should meet minimum character length.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1632.severity = none

# SA1633: File should have header.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1633.severity = none

# SA1634: File header should show copyright.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1634.severity = none

# SA1635: File header should have copyright text.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1635.severity = none

# SA1636: File header copyright text should match.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1636.severity = none

# SA1637: File header should contain file name.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1637.severity = none

# SA1638: File header file name documentation should match file name.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1638.severity = none

# SA1639: File header should have summary.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1639.severity = none

# SA1640: File header should have valid company text.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1640.severity = none

# SA1641: File header company name text should match.
# Motivation: File headers not required. When desired, file headers should be
# using IDE0073 which is more configurable.
dotnet_diagnostic.SA1641.severity = none

# SA1642: Constructor summary documentation should begin with standard text.
dotnet_diagnostic.SA1642.severity = warning

# SA1643: Destructor summary documentation should begin with standard text.
dotnet_diagnostic.SA1643.severity = warning

# SA1644: Documentation headers should not contain blank lines.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1644.severity = none

# SA1645: Included documentation file does not exist.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1645.severity = none

# SA1646: Included documentation XPath does not exist.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1646.severity = none

# SA1647: Include node does not contain valid file and path.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1647.severity = none

# SA1648: Inheritdoc should be used with inheriting class.
dotnet_diagnostic.SA1648.severity = warning

# SA1649: File name should match first type name.
dotnet_diagnostic.SA1649.severity = warning

# SA1650: Element documentation should be spelled correctly.
# Motivation: StyleCopAnalyzers doesn't implement this classic rule.
dotnet_diagnostic.SA1650.severity = none

# SA1651: Do not use placeholder elements.
dotnet_diagnostic.SA1651.severity = warning
